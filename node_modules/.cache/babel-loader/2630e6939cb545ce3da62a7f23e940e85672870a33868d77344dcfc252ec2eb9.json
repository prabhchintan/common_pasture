{"ast":null,"code":"var _jsxFileName = \"/Users/prabrandhawa/Desktop/common_pasture/src/SecondStep.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport './SecondStep.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SecondStep({\n  onGoBack\n}) {\n  _s();\n  const [revenueState, setRevenueState] = useState(0);\n  const [revenueFirstFarmer, setRevenueFirstFarmer] = useState(0);\n  const [revenueSecondFarmer, setRevenueSecondFarmer] = useState(0);\n  const [steps, setSteps] = useState(0);\n  const [lastAction, setLastAction] = useState(\"\");\n  const months = ['It\\'s January', 'It\\'s February', 'It\\'s March', 'It\\'s April', 'It\\'s May', 'It\\'s June', 'It\\'s July', 'It\\'s August', 'It\\'s September', 'It\\'s October', 'It\\'s November', 'It\\'s December', \"It's time to reflect\"];\n  const hayekConsiderations = [\"Do you think the farmers can manage their resources better than the state?\", \"Is there a way to ensure you both get the maximum happiness?\", \"Would it make a difference if the farmers knew about your choice beforehand?\", \"What's the best strategy if you could communicate with the farmers?\", \"Can a heavy-handed approach lead to higher revenues for the state?\", \"How would the dynamics change if there were more farmers?\", \"Would you change your strategy if you knew the farmers were very competitive?\", \"What if the farmers are kind and always comply with the state's regulations?\", \"Is it possible to always win in this game?\", \"Can you predict the outcome of the game based on the first few rounds?\", \"What if you had more resources at your disposal? Would it change your strategy?\", \"Reflect on your actions and their consequences. Did your choices lead to a prosperous state?\"];\n  const scoreMatrix = {\n    \"Do Nothing\": {\n      \"Farm, Farm\": [10, 10, 10],\n      \"Farm, Pasture\": [9, 21, 5],\n      \"Pasture, Farm\": [21, 9, 5],\n      \"Pasture, Pasture\": [5, 5, 0]\n    },\n    \"Survey Pasture\": {\n      \"Farm, Farm\": [9, 9, 5],\n      \"Farm, Pasture\": [10, 16, 5],\n      \"Pasture, Farm\": [16, 10, 5],\n      \"Pasture, Pasture\": [10, 10, 10]\n    },\n    \"Extract Resources\": {\n      \"Farm, Farm\": [5, 5, 15],\n      \"Farm, Pasture\": [5, 10, 10],\n      \"Pasture, Farm\": [10, 5, 10],\n      \"Pasture, Pasture\": [0, 0, 0]\n    },\n    \"Collect Tax/Impose Fine\": {\n      \"Farm, Farm\": [9, 9, 5],\n      \"Farm, Pasture\": [10, 20, 10],\n      \"Pasture, Farm\": [20, 10, 10],\n      \"Pasture, Pasture\": [0, 0, 20]\n    }\n  };\n  const getNeighborAction = () => {\n    return Math.random() < 0.5 ? \"Farm\" : \"Pasture\";\n  };\n  const reset = () => {\n    setRevenueState(0);\n    setRevenueFirstFarmer(0);\n    setRevenueSecondFarmer(0);\n    setSteps(0);\n    setLastAction(\"\");\n  };\n  const handleStateAction = action => {\n    if (steps >= 12) return;\n    const neighbor1Action = getNeighborAction();\n    const neighbor2Action = getNeighborAction();\n    const [newRevenueFirstFarmer, newRevenueSecondFarmer, newRevenueState] = scoreMatrix[action][`${neighbor1Action}, ${neighbor2Action}`];\n    setRevenueState(revenueState + newRevenueState);\n    setRevenueFirstFarmer(revenueFirstFarmer + newRevenueFirstFarmer);\n    setRevenueSecondFarmer(revenueSecondFarmer + newRevenueSecondFarmer);\n    setSteps(steps + 1);\n    setLastAction(`Last month, the state chose to ${action.toLowerCase()}, the first farmer chose to ${neighbor1Action.toLowerCase()}, and the second farmer chose to ${neighbor2Action.toLowerCase()}.`);\n  };\n  const getCurrentMonth = () => {\n    return months[steps];\n  };\n  const getCurrentMonthConsideration = () => {\n    return hayekConsiderations[steps];\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"SecondStep\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"https://www.foodandwine.com/thmb/zG2tLe411fyVEy_gIR3JTfCQEuc=/1500x0/filters:no_upscale():max_bytes(150000):strip_icc()/best-farms-in-america-soul-fire-farm-FT-BLOG0720-2-4835d975143c44f1bff76d1218a730cc.jpg\",\n      alt: \"Farm\",\n      className: \"farmImage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome to Seeing Like a State!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"revenue\",\n      children: [\"State Revenue: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [\"$\", revenueState]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 45\n      }, this), \" :: First Farmer Revenue: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [\"$\", revenueFirstFarmer]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 103\n      }, this), \" :: Second Farmer Revenue: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [\"$\", revenueSecondFarmer]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 168\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"storyline\",\n      children: \"Welcome, Governor! As the leader of the entire region, you now have two farms under your jurisdiction. You have the power to observe and interact with these farms. With power comes responsibility, and the state depends on your decisions. Will you choose to sit back and let the farmers manage their own affairs, or will you be proactive and survey the pastures? The state needs resources, will you extract them from the pastures, or will you choose to impose taxes or fines to balance the books? Remember, your decisions will affect not just the state, but also the well-being of the farmers. Choose your actions wisely.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"month\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: getCurrentMonth()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 28\n      }, this), \": \", getCurrentMonthConsideration()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"lastAction\",\n      children: lastAction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"actionButtons\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"default\",\n        onClick: () => handleStateAction('Do Nothing'),\n        children: \"Do Nothing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"default\",\n        onClick: () => handleStateAction('Survey Pasture'),\n        children: \"Survey Pasture\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"default\",\n        onClick: () => handleStateAction('Extract Resources'),\n        children: \"Extract Resources\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"default\",\n        onClick: () => handleStateAction('Collect Tax/Impose Fine'),\n        children: \"Collect Tax/Impose Fine\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"resetButton\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"default\",\n        onClick: reset,\n        children: \"Reset Seeing Like a State\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"default\",\n      onClick: onGoBack,\n      children: \"Go Back to Being a Farmer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n_s(SecondStep, \"jDv7RXiJZBPJsPuusBc3RN/DVG8=\");\n_c = SecondStep;\nexport default SecondStep;\nvar _c;\n$RefreshReg$(_c, \"SecondStep\");","map":{"version":3,"names":["React","useState","Button","jsxDEV","_jsxDEV","SecondStep","onGoBack","_s","revenueState","setRevenueState","revenueFirstFarmer","setRevenueFirstFarmer","revenueSecondFarmer","setRevenueSecondFarmer","steps","setSteps","lastAction","setLastAction","months","hayekConsiderations","scoreMatrix","getNeighborAction","Math","random","reset","handleStateAction","action","neighbor1Action","neighbor2Action","newRevenueFirstFarmer","newRevenueSecondFarmer","newRevenueState","toLowerCase","getCurrentMonth","getCurrentMonthConsideration","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","variant","color","onClick","_c","$RefreshReg$"],"sources":["/Users/prabrandhawa/Desktop/common_pasture/src/SecondStep.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport './SecondStep.css';\n\nfunction SecondStep({ onGoBack }) {\n  const [revenueState, setRevenueState] = useState(0);\n  const [revenueFirstFarmer, setRevenueFirstFarmer] = useState(0);\n  const [revenueSecondFarmer, setRevenueSecondFarmer] = useState(0);\n  const [steps, setSteps] = useState(0);\n  const [lastAction, setLastAction] = useState(\"\");\n\n  const months = ['It\\'s January', 'It\\'s February', 'It\\'s March', 'It\\'s April', 'It\\'s May', 'It\\'s June', 'It\\'s July', 'It\\'s August', 'It\\'s September', 'It\\'s October', 'It\\'s November', 'It\\'s December', \"It's time to reflect\"];\n  const hayekConsiderations = [\n    \"Do you think the farmers can manage their resources better than the state?\",\n    \"Is there a way to ensure you both get the maximum happiness?\",\n    \"Would it make a difference if the farmers knew about your choice beforehand?\",\n    \"What's the best strategy if you could communicate with the farmers?\",\n    \"Can a heavy-handed approach lead to higher revenues for the state?\",\n    \"How would the dynamics change if there were more farmers?\",\n    \"Would you change your strategy if you knew the farmers were very competitive?\",\n    \"What if the farmers are kind and always comply with the state's regulations?\",\n    \"Is it possible to always win in this game?\",\n    \"Can you predict the outcome of the game based on the first few rounds?\",\n    \"What if you had more resources at your disposal? Would it change your strategy?\",\n    \"Reflect on your actions and their consequences. Did your choices lead to a prosperous state?\"\n  ];\n\n  const scoreMatrix = {\n    \"Do Nothing\": {\n      \"Farm, Farm\": [10, 10, 10],\n      \"Farm, Pasture\": [9, 21, 5],\n      \"Pasture, Farm\": [21, 9, 5],\n      \"Pasture, Pasture\": [5, 5, 0]\n    },\n    \"Survey Pasture\": {\n      \"Farm, Farm\": [9, 9, 5],\n      \"Farm, Pasture\": [10, 16, 5],\n      \"Pasture, Farm\": [16, 10, 5],\n      \"Pasture, Pasture\": [10, 10, 10]\n    },\n    \"Extract Resources\": {\n      \"Farm, Farm\": [5, 5, 15],\n      \"Farm, Pasture\": [5, 10, 10],\n      \"Pasture, Farm\": [10, 5, 10],\n      \"Pasture, Pasture\": [0, 0, 0]\n    },\n    \"Collect Tax/Impose Fine\": {\n      \"Farm, Farm\": [9, 9, 5],\n      \"Farm, Pasture\": [10, 20, 10],\n      \"Pasture, Farm\": [20, 10, 10],\n      \"Pasture, Pasture\": [0, 0, 20]\n    }\n  };\n\n  const getNeighborAction = () => {\n    return Math.random() < 0.5 ? \"Farm\" : \"Pasture\";\n  };\n\n  const reset = () => {\n    setRevenueState(0);\n    setRevenueFirstFarmer(0);\n    setRevenueSecondFarmer(0);\n    setSteps(0);\n    setLastAction(\"\");\n  };\n\n  const handleStateAction = (action) => {\n    if (steps >= 12) return;\n\n    const neighbor1Action = getNeighborAction();\n    const neighbor2Action = getNeighborAction();\n    const [newRevenueFirstFarmer, newRevenueSecondFarmer, newRevenueState] = scoreMatrix[action][`${neighbor1Action}, ${neighbor2Action}`];\n\n    setRevenueState(revenueState + newRevenueState);\n    setRevenueFirstFarmer(revenueFirstFarmer + newRevenueFirstFarmer);\n    setRevenueSecondFarmer(revenueSecondFarmer + newRevenueSecondFarmer);\n    setSteps(steps + 1);\n    setLastAction(`Last month, the state chose to ${action.toLowerCase()}, the first farmer chose to ${neighbor1Action.toLowerCase()}, and the second farmer chose to ${neighbor2Action.toLowerCase()}.`);\n  };\n\n  const getCurrentMonth = () => {\n    return months[steps];\n  };\n\n  const getCurrentMonthConsideration = () => {\n    return hayekConsiderations[steps];\n  };\n\n  return (\n    <div className=\"SecondStep\">\n      <img src=\"https://www.foodandwine.com/thmb/zG2tLe411fyVEy_gIR3JTfCQEuc=/1500x0/filters:no_upscale():max_bytes(150000):strip_icc()/best-farms-in-america-soul-fire-farm-FT-BLOG0720-2-4835d975143c44f1bff76d1218a730cc.jpg\" alt=\"Farm\" className=\"farmImage\" />\n      <h1>Welcome to Seeing Like a State!</h1>\n      <p className=\"revenue\">State Revenue: <strong>${revenueState}</strong> :: First Farmer Revenue: <strong>${revenueFirstFarmer}</strong> :: Second Farmer Revenue: <strong>${revenueSecondFarmer}</strong></p>\n      <p className=\"storyline\">\n        Welcome, Governor! As the leader of the entire region, you now have two farms under your jurisdiction. You have the power to observe and interact with these farms. With power comes responsibility, and the state depends on your decisions. Will you choose to sit back and let the farmers manage their own affairs, or will you be proactive and survey the pastures? The state needs resources, will you extract them from the pastures, or will you choose to impose taxes or fines to balance the books? Remember, your decisions will affect not just the state, but also the well-being of the farmers. Choose your actions wisely.\n      </p>\n      <p className=\"month\"><strong>{getCurrentMonth()}</strong>: {getCurrentMonthConsideration()}</p>\n      <p className=\"lastAction\">{lastAction}</p>\n      <div className=\"actionButtons\">\n        <Button variant=\"contained\" color=\"default\" onClick={() => handleStateAction('Do Nothing')}>Do Nothing</Button>\n        <Button variant=\"contained\" color=\"default\" onClick={() => handleStateAction('Survey Pasture')}>Survey Pasture</Button>\n        <Button variant=\"contained\" color=\"default\" onClick={() => handleStateAction('Extract Resources')}>Extract Resources</Button>\n        <Button variant=\"contained\" color=\"default\" onClick={() => handleStateAction('Collect Tax/Impose Fine')}>Collect Tax/Impose Fine</Button>\n      </div>\n      <div className=\"resetButton\">\n        <Button variant=\"contained\" color=\"default\" onClick={reset}>Reset Seeing Like a State</Button>\n      </div>\n      <Button variant=\"contained\" color=\"default\" onClick={onGoBack}>Go Back to Being a Farmer</Button>\n    </div>\n  );\n}\n\nexport default SecondStep;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,QAAQ,mBAAmB;AAC1C,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,UAAUA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAChC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAM,CAACS,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EAC/D,MAAM,CAACW,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EACjE,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACe,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMiB,MAAM,GAAG,CAAC,eAAe,EAAE,gBAAgB,EAAE,aAAa,EAAE,aAAa,EAAE,WAAW,EAAE,YAAY,EAAE,YAAY,EAAE,cAAc,EAAE,iBAAiB,EAAE,eAAe,EAAE,gBAAgB,EAAE,gBAAgB,EAAE,sBAAsB,CAAC;EACzO,MAAMC,mBAAmB,GAAG,CAC1B,4EAA4E,EAC5E,8DAA8D,EAC9D,8EAA8E,EAC9E,qEAAqE,EACrE,oEAAoE,EACpE,2DAA2D,EAC3D,+EAA+E,EAC/E,8EAA8E,EAC9E,4CAA4C,EAC5C,wEAAwE,EACxE,iFAAiF,EACjF,8FAA8F,CAC/F;EAED,MAAMC,WAAW,GAAG;IAClB,YAAY,EAAE;MACZ,YAAY,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;MAC1B,eAAe,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;MAC3B,eAAe,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;MAC3B,kBAAkB,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;IAC9B,CAAC;IACD,gBAAgB,EAAE;MAChB,YAAY,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MACvB,eAAe,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;MAC5B,eAAe,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;MAC5B,kBAAkB,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE;IACjC,CAAC;IACD,mBAAmB,EAAE;MACnB,YAAY,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;MACxB,eAAe,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;MAC5B,eAAe,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC;MAC5B,kBAAkB,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;IAC9B,CAAC;IACD,yBAAyB,EAAE;MACzB,YAAY,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MACvB,eAAe,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;MAC7B,eAAe,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;MAC7B,kBAAkB,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;IAC/B;EACF,CAAC;EAED,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,OAAOC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,MAAM,GAAG,SAAS;EACjD,CAAC;EAED,MAAMC,KAAK,GAAGA,CAAA,KAAM;IAClBf,eAAe,CAAC,CAAC,CAAC;IAClBE,qBAAqB,CAAC,CAAC,CAAC;IACxBE,sBAAsB,CAAC,CAAC,CAAC;IACzBE,QAAQ,CAAC,CAAC,CAAC;IACXE,aAAa,CAAC,EAAE,CAAC;EACnB,CAAC;EAED,MAAMQ,iBAAiB,GAAIC,MAAM,IAAK;IACpC,IAAIZ,KAAK,IAAI,EAAE,EAAE;IAEjB,MAAMa,eAAe,GAAGN,iBAAiB,CAAC,CAAC;IAC3C,MAAMO,eAAe,GAAGP,iBAAiB,CAAC,CAAC;IAC3C,MAAM,CAACQ,qBAAqB,EAAEC,sBAAsB,EAAEC,eAAe,CAAC,GAAGX,WAAW,CAACM,MAAM,CAAC,CAAE,GAAEC,eAAgB,KAAIC,eAAgB,EAAC,CAAC;IAEtInB,eAAe,CAACD,YAAY,GAAGuB,eAAe,CAAC;IAC/CpB,qBAAqB,CAACD,kBAAkB,GAAGmB,qBAAqB,CAAC;IACjEhB,sBAAsB,CAACD,mBAAmB,GAAGkB,sBAAsB,CAAC;IACpEf,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;IACnBG,aAAa,CAAE,kCAAiCS,MAAM,CAACM,WAAW,CAAC,CAAE,+BAA8BL,eAAe,CAACK,WAAW,CAAC,CAAE,oCAAmCJ,eAAe,CAACI,WAAW,CAAC,CAAE,GAAE,CAAC;EACvM,CAAC;EAED,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC5B,OAAOf,MAAM,CAACJ,KAAK,CAAC;EACtB,CAAC;EAED,MAAMoB,4BAA4B,GAAGA,CAAA,KAAM;IACzC,OAAOf,mBAAmB,CAACL,KAAK,CAAC;EACnC,CAAC;EAED,oBACEV,OAAA;IAAK+B,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACzBhC,OAAA;MAAKiC,GAAG,EAAC,iNAAiN;MAACC,GAAG,EAAC,MAAM;MAACH,SAAS,EAAC;IAAW;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9PtC,OAAA;MAAAgC,QAAA,EAAI;IAA+B;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxCtC,OAAA;MAAG+B,SAAS,EAAC,SAAS;MAAAC,QAAA,GAAC,iBAAe,eAAAhC,OAAA;QAAAgC,QAAA,GAAQ,GAAC,EAAC5B,YAAY;MAAA;QAAA+B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,8BAA0B,eAAAtC,OAAA;QAAAgC,QAAA,GAAQ,GAAC,EAAC1B,kBAAkB;MAAA;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,+BAA2B,eAAAtC,OAAA;QAAAgC,QAAA,GAAQ,GAAC,EAACxB,mBAAmB;MAAA;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAC5MtC,OAAA;MAAG+B,SAAS,EAAC,WAAW;MAAAC,QAAA,EAAC;IAEzB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACJtC,OAAA;MAAG+B,SAAS,EAAC,OAAO;MAAAC,QAAA,gBAAChC,OAAA;QAAAgC,QAAA,EAASH,eAAe,CAAC;MAAC;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,MAAE,EAACR,4BAA4B,CAAC,CAAC;IAAA;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/FtC,OAAA;MAAG+B,SAAS,EAAC,YAAY;MAAAC,QAAA,EAAEpB;IAAU;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1CtC,OAAA;MAAK+B,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5BhC,OAAA,CAACF,MAAM;QAACyC,OAAO,EAAC,WAAW;QAACC,KAAK,EAAC,SAAS;QAACC,OAAO,EAAEA,CAAA,KAAMpB,iBAAiB,CAAC,YAAY,CAAE;QAAAW,QAAA,EAAC;MAAU;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC/GtC,OAAA,CAACF,MAAM;QAACyC,OAAO,EAAC,WAAW;QAACC,KAAK,EAAC,SAAS;QAACC,OAAO,EAAEA,CAAA,KAAMpB,iBAAiB,CAAC,gBAAgB,CAAE;QAAAW,QAAA,EAAC;MAAc;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACvHtC,OAAA,CAACF,MAAM;QAACyC,OAAO,EAAC,WAAW;QAACC,KAAK,EAAC,SAAS;QAACC,OAAO,EAAEA,CAAA,KAAMpB,iBAAiB,CAAC,mBAAmB,CAAE;QAAAW,QAAA,EAAC;MAAiB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC7HtC,OAAA,CAACF,MAAM;QAACyC,OAAO,EAAC,WAAW;QAACC,KAAK,EAAC,SAAS;QAACC,OAAO,EAAEA,CAAA,KAAMpB,iBAAiB,CAAC,yBAAyB,CAAE;QAAAW,QAAA,EAAC;MAAuB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtI,CAAC,eACNtC,OAAA;MAAK+B,SAAS,EAAC,aAAa;MAAAC,QAAA,eAC1BhC,OAAA,CAACF,MAAM;QAACyC,OAAO,EAAC,WAAW;QAACC,KAAK,EAAC,SAAS;QAACC,OAAO,EAAErB,KAAM;QAAAY,QAAA,EAAC;MAAyB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3F,CAAC,eACNtC,OAAA,CAACF,MAAM;MAACyC,OAAO,EAAC,WAAW;MAACC,KAAK,EAAC,SAAS;MAACC,OAAO,EAAEvC,QAAS;MAAA8B,QAAA,EAAC;IAAyB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9F,CAAC;AAEV;AAACnC,EAAA,CA1GQF,UAAU;AAAAyC,EAAA,GAAVzC,UAAU;AA4GnB,eAAeA,UAAU;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}